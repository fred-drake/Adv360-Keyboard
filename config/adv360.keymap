#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define GME 5
#define SUD 6
#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define GME 5

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <750>;
            quick-tap-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <750>;
            quick-tap-ms = <400>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 35 36 37 38 52 53 66 67 68 69 65>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &kp N1  &kp N2           &kp N3               &kp N4       &kp N5  &none                                                          &none      &kp N6  &kp N7       &kp N8                &kp N9            &kp N0         &to 5
&none       &kp Q   &kp W            &kp E                &kp R        &kp T   &none                                                          &none      &kp Y   &kp U        &kp I                 &kp O             &kp P          &none
&kp ESCAPE  &kp A   &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LGUI F  &kp G   &none           &none  &none             &none          &none  &none      &kp H   &hmr RGUI J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &kp BACKSPACE  &kp SEMI
&kp TAB     &kp Z   &kp X            &kp C                &kp V        &kp B                          &kp LEFT_ALT      &kp RIGHT_ALT                    &kp N   &kp M        &kp COMMA             &kp DOT           &none          &none
&none       &none   &none            &none                &none                &kp LEFT_SHIFT  &mo 2  &kp LEFT_GUI      &kp RIGHT_GUI  &mo 1  &kp SPACE          &none        &none                 &none             &none          &to 4
            >;
        };

        right_layer {
            bindings = <
&trans  &kp F11  &kp F12                    &kp F13                        &kp F14                &kp F15          &trans                                      &bootloader  &kp F16        &kp F17         &kp F18                      &kp F19             &kp F20  &trans
&trans  &trans   &kp KP_NUMBER_7            &kp KP_NUMBER_8                &kp KP_NUMBER_9        &none            &trans                                      &trans       &kp PG_UP      &kp INSERT      &none                        &kp PRINTSCREEN     &trans   &trans
&trans  &none    &hml LEFT_ALT KP_NUMBER_4  &hml LEFT_CONTROL KP_NUMBER_5  &hml LGUI KP_NUMBER_6  &kp PERIOD       &trans  &trans  &trans      &trans  &trans  &none        &kp PG_DN      &hmr RGUI HOME  &hmr RIGHT_CONTROL UP_ARROW  &hmr RIGHT_ALT END  &trans   &trans
&trans  &none    &kp KP_NUMBER_1            &kp KP_NUMBER_2                &kp KP_NUMBER_3        &kp KP_NUMBER_0                  &trans      &trans                       &kp SEMICOLON  &kp LEFT_ARROW  &kp DOWN_ARROW               &kp RIGHT_ARROW     &none    &trans
&trans  &trans   &trans                     &trans                         &trans                                  &trans  &trans  &trans      &trans  &trans  &trans                      &trans          &trans                       &trans              &trans   &trans
            >;
        };

        left_layer {
            bindings = <
&trans  &kp F1             &kp F2                          &kp F3                              &kp F4                &kp F5     &bootloader                                      &none   &kp F6     &kp F7           &kp F8                &kp F9                    &kp F10    &trans
&trans  &kp EXCL           &kp AT                          &kp HASH                            &kp DLLR              &kp PRCNT  &trans                                           &trans  &kp CARET  &kp AMPS         &kp ASTRK             &kp GRAVE                 &kp TILDE  &trans
&trans  &kp DOUBLE_QUOTES  &hml LEFT_ALT LEFT_PARENTHESIS  &hml LS(LEFT_CONTROL) LEFT_BRACKET  &hml LGUI LEFT_BRACE  &kp LT     &trans       &trans  &trans      &trans  &trans  &trans  &kp FSLH   &hmr RGUI MINUS  &hmr RIGHT_ALT EQUAL  &hmr RIGHT_CONTROL COLON  &kp ENTER  &trans
&trans  &kp SQT            &kp RIGHT_PARENTHESIS           &kp RIGHT_BRACKET                   &kp RIGHT_BRACE       &kp GT                          &trans      &trans                  &kp BSLH   &kp UNDER        &kp PLUS              &kp PIPE                  &kp QMARK  &trans
&trans  &trans             &trans                          &trans                              &trans                           &trans       &trans  &trans      &trans  &trans  &trans             &trans           &trans                &trans                    &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans        &kp LS(LC(LG(N4)))                                      &bl BL_TOG  &trans        &trans            &trans           &trans      &trans  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_SEL 0  &kp LS(LG(N4))                                          &bl BL_INC  &bt BT_SEL 3  &trans            &kp K_MUTE       &kp C_PREV  &trans  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1  &none               &trans  &trans      &trans  &trans  &bl BL_DEC  &bt BT_SEL 4  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP  &kp C_PP    &trans  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 2                              &trans      &trans                      &bt BT_CLR    &trans            &kp C_VOL_DN     &trans      &trans  &trans
&trans  &trans  &trans   &trans   &trans                 &trans              &trans  &trans      &trans  &trans  &trans                    &trans            &trans           &trans      &trans  &trans
            >;
        };

        game_layer {
            bindings = <
&kp EQUAL  &kp N1      &kp N2    &kp N3  &kp N4  &kp N5  &none                                          &trans  &trans  &trans    &trans          &trans           &trans  &trans
&kp TAB    &kp H       &kp Q     &kp W   &kp E   &kp R   &kp T                                          &trans  &trans  &trans    &trans          &trans           &trans  &to 0
&kp ESC    &kp LSHIFT  &kp A     &kp S   &kp D   &kp F   &kp G      &kp M    &kp I      &trans  &trans  &trans  &trans  &trans    &kp UP_ARROW    &trans           &trans  &trans
&kp LALT   &kp LCTRL   &kp Z     &kp X   &kp C   &kp V                       &kp H      &trans                  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&none      &none       &kp CAPS  &none   &kp B           &kp SPACE  &kp TAB  &kp Y      &trans  &trans  &trans          &trans    &trans          &trans           &trans  &trans
            >;
        };

        sudoku_layer {
            bindings = <
&none  &none  &none   &none   &none   &none   &none                                             &trans  &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N7  &kp N8  &kp N9  &trans  &trans                                            &trans  &trans  &trans  &trans  &trans  &trans  &to 0
&none  &none  &kp N4  &kp N5  &kp N6  &trans  &trans     &trans     &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &kp N1  &kp N2  &kp N3  &trans                        &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &none   &none   &none           &kp LSHFT  &kp LCTRL  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &to 0
            >;
        };
    };
};
